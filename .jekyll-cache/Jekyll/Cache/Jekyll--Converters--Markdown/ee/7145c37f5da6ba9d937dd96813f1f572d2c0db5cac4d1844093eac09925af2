I"k<!--
 >Theory and Computational Biology: From Molecular to System
-->
<!-- > 当你打开我这个网页时，恭喜你，你离毕业不远了，撸起袖子加油干啊，奥利给！  
> <p align="right">-- Forty Braver </p>
-->
<h1 id="homebrew简介">Homebrew简介：</h1>

<p>引用<a href="https://brew.sh">官方</a>的一句话：Homebrew是Mac OS 不可或缺的套件管理器。
Homebrew是一款Mac OS平台下的软件包管理工具，拥有安装、卸载、更新、查看、搜索等很多实用的功能。简单的一条指令，就可以实现包管理，而不用你关心各种依赖和文件路径的情况，十分方便快捷。</p>

<p>个人觉得，使用Homebrew使得Mac上安装软件和在ubuntu上使用apt-get install 一样便捷！</p>

<p>本来是想新Mac到手，可以继续把我的<a href="https://csu1505110121.github.io">blog</a>经营起来，按照<a href="https://jekyllrb.com">jekyll官网</a>的介绍，使用Mac自带的ruby版本<code class="language-plaintext highlighter-rouge">2.6.0</code>无法正常执行jekyll，想着是不是要将ruby进行升级到<code class="language-plaintext highlighter-rouge">2.7.3</code>进行试一下。</p>

<p>但是截止到这篇blog，homebrew使用原始x86都无法正常安装，本文的安装主要参照一下两篇blog：</p>

<ul>
  <li>https://www.dbform.com/2020/11/30/how-to-install-native-homebrew-on-an-apple-silicon-m1-mac/</li>
  <li>https://blog.csdn.net/csdn2314/article/details/110952637</li>
</ul>

<h1 id="homebrew在2020-mac-m1-silicon上的安装方法">Homebrew在2020 Mac M1 silicon上的安装方法</h1>
<p>要在Apple Silicon M1上安装homebrew有两种方法：</p>

<ul>
  <li><strong>第一种：</strong> 在Rosetta 2下安装x86架构的Homebrew <em>（本人没有亲自尝试）</em>，主要原理是使用Rosetta的转码功能，还是直接安装x86架构的Homebrew，后续通过这个brew安装所有的软件，毋庸置疑，也都是基于x86架构的，可以通过Rosetta 2在M1 silicon上常运行。</li>
</ul>

<p>安装方法如下：</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">arch</span> <span class="nt">-x86_64</span> /bin/bash <span class="nt">-c</span> <span class="s2">"</span><span class="si">$(</span>curl <span class="nt">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh<span class="si">)</span><span class="s2">"</span>
</code></pre></div></div>

<ul>
  <li><strong>第二种：</strong> 通过自行安装，运行M1架构的原生Homebrew
安装方法如下：
```bash
##首先创建安装目录
sudo mkdir -p /opt/homebrew</li>
</ul>

<p>##将目录属主修改为当前用户，方便以后用当前用户直接brew install软件
sudo chown -R $(whoami) /opt/homebrew</p>

<h2 id="进入到opt下">进入到/opt下</h2>
<p>cd /opt</p>

<p>##直接下载homebrew tar包并解压
curl -L https://github.com/Homebrew/brew/tarball/master | tar xz –strip 1 -C homebrew</p>

<p>##将路径增加到PATH环境变量中
如果使用的是zsh则直接修改~/.zshrc，如果使用的是bash，则修改~/.bash_profile，我的例子中修改.zshrc
echo “export PATH=/opt/homebrew/bin:$PATH” » ~/.zshrc</p>

<p>##新开一个Terminal窗口或者在当前窗口让环境变量生效
source ~/.zshrc</p>

<p>##现在可以安装软件了，注意要使用-s选项，表示编译源码安装
brew install -s wget</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---

# [jekyll 安装测试](https://jekyllrb.com/docs/installation/macos/)

1. 安装CTL(command line tools)
```bash
xcode-select --install
</code></pre></div></div>

<ol>
  <li>安装Ruby
    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># Install Ruby -s选项表示源码编译</span>
brew <span class="nb">install</span> <span class="nt">-s</span> ruby
</code></pre></div>    </div>
  </li>
  <li>将ruby加入到环境变量中
```bash
    <h1 id="if-youre-using-zsh">If you’re using Zsh</h1>
    <p>echo ‘export PATH=”/usr/local/opt/ruby/bin:$PATH”’ » ~/.zshrc</p>
  </li>
</ol>

<h1 id="if-youre-using-bash">If you’re using Bash</h1>
<p>echo ‘export PATH=”/usr/local/opt/ruby/bin:$PATH”’ » ~/.bash_profile</p>

<h1 id="unsure-which-shell-you-are-using-type">Unsure which shell you are using? Type</h1>
<p>echo $SHELL</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
4. 安装jekyll (local install)
```bash
gem install --user-install bundler jekyll
</code></pre></div></div>

:ET